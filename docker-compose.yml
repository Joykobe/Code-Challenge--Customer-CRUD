services:
  # PHP-FPM Service for your Lumen API
  api:
    build:
      context: ./backend # Build from the Dockerfile in the 'backend' directory
      dockerfile: Dockerfile
    container_name: customer-api
    restart: always
    volumes:
      - ./backend:/var/www/html # Mount your local backend code into the container
    # Expose port 9000 for Nginx to communicate with PHP-FPM
    # Note: This port is internal to the Docker network, not exposed to host.
    expose:
      - 9000
    environment:
      # Lumen environment variables
      # These will be used by your Lumen application
      DB_CONNECTION: mysql
      DB_HOST: db # Service name for the database container
      DB_PORT: 3306
      DB_DATABASE: customer_db
      DB_USERNAME: user
      DB_PASSWORD: password
      APP_DEBUG: ${APP_DEBUG:-true} # Use .env for APP_DEBUG, default to true
      APP_ENV: ${APP_ENV:-local}
      APP_KEY: base64:xCHrUVQ0ARYBdW+MXOs1UFd04zgl5OjYDmyc6CCNE4o=% # IMPORTANT: Replace with a real key after setup
      ELASTICSEARCH_HOST: elasticsearch # Service name for Elasticsearch
      ELASTICSEARCH_PORT: 9200
    depends_on:
      - db
      - elasticsearch # API depends on DB and Elasticsearch being ready

  # Nginx Service acting as the controller/load balancer
  nginx:
    image: nginx:stable-alpine # Use a stable Nginx image
    container_name: customer-nginx
    restart: always
    ports:
      - "8000:80" # Map host port 8000 to container port 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro # Mount Nginx config
      - ./backend:/var/www/html # Mount the Lumen application root for Nginx to serve static files (if any)
    depends_on:
      - api # Nginx depends on the API service being up

  # MySQL Database Service
  db:
    image: mysql:8.0 # Use a specific MySQL version
    container_name: customer-mysql-db
    restart: always
    environment:
      MYSQL_DATABASE: customer_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root_password # Root password for MySQL
    volumes:
      - db_data:/var/lib/mysql # Persistent data volume for the database
    ports:
      - "3307:3306" # Expose MySQL port to host (optional, for local client access)

  # Elasticsearch Search Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0 # Use a compatible Elasticsearch version
    container_name: customer-elasticsearch
    restart: always
    environment:
      - discovery.type=single-node # Required for single-node development setup
      - ES_JAVA_OPTS=-Xms512m -Xmx512m # Allocate memory for Elasticsearch
    ulimits: # Important for Elasticsearch stability
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data # Persistent data volume for Elasticsearch
    ports:
      - "9200:9200" # Expose Elasticsearch HTTP port
      - "9300:9300" # Expose Elasticsearch TCP port (for inter-node communication)

# Define named volumes for persistent data
volumes:
  db_data: # Volume for MySQL data
  es_data: # Volume for Elasticsearch data
