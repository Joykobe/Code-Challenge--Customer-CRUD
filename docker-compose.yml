services:
  api:
    build:
      context: ./backend 
      dockerfile: Dockerfile
    container_name: customer-api
    restart: always
    volumes:
      - ./backend:/var/www/html 
    expose:
      - 9000
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db 
      DB_PORT: 3306
      DB_DATABASE: customer_db
      DB_USERNAME: user
      DB_PASSWORD: password
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_ENV: ${APP_ENV:-local}
      APP_KEY: base64:xCHrUVQ0ARYBdW+MXOs1UFd04zgl5OjYDmyc6CCNE4o=% 
      ELASTICSEARCH_HOST: elasticsearch 
      ELASTICSEARCH_PORT: 9200
    depends_on:
      - db
      - elasticsearch 

  
  nginx:
    image: nginx:stable-alpine # Use a stable Nginx image
    container_name: customer-nginx
    restart: always
    ports:
      - "8000:80" 
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro 
      - ./backend:/var/www/html 
    depends_on:
      - api # Nginx depends on the API service being up

  # MySQL Database Service
  db:
    image: mysql:8.0 # Use a specific MySQL version
    container_name: customer-mysql-db
    restart: always
    environment:
      MYSQL_DATABASE: customer_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root_password 
    volumes:
      - db_data:/var/lib/mysql 
    ports:
      - "3307:3306" 

  # Elasticsearch Search Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0 
    container_name: customer-elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m 
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data 
    ports:
      - "9200:9200" 
      - "9300:9300" 

volumes:
  db_data: 
  es_data: 
